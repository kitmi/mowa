'use strict';const path=require('path'),Mowa=require('../server.js'),Util=Mowa.Util,_=Util._,fs=Util.fs,Promise=Util.Promise,oolong=require('../oolong'),MowaHelper=module.exports;exports.startMowa_=function(api){let mowa=new Mowa(api.mowaName,{deaf:true,verbose:api.config['general'].verbose});return mowa.start_()};exports.writeConfigBlock_=function(loader,key,value){Util.setValueByPath(loader.provider.esConfig,key,value);return loader.provider.save()};exports.getAvailableAppNames=function(api){let appModulesPath=path.resolve(api.base,Mowa.Literal.APP_MODULES_PATH),modules=fs.readdirSync(appModulesPath,'utf8');return _.filter(modules,f=>fs.lstatSync(path.join(appModulesPath,f)).isDirectory())};exports.getRunningAppModules=function(api){return _.values(api.server.childModules)};exports.getAppModuleToOperate=function(api){let appName=api.getOption('app'),appModule=api.server.childModules[appName];if(!appModule){throw new Error(`App "${appName}" is not mounted in the project. Run "mowa app mount" first.`)}return appModule};exports.getAppModuleDependencies=function(appModule){let pkg=require(appModule.toAbsolutePath('package.json'));return pkg.dependencies};exports.getAllDbmsFeatures=function(appModule){return _.filter(appModule.features,{type:Mowa.Feature.DBMS})};exports.getDbConnectionList=function(api){let serverDbs={},allAppDbs={},features=MowaHelper.getAllDbmsFeatures(api.server);features.forEach(feature=>{let featureConfig=api.server.config[feature.name];_.forOwn(featureConfig,(config,name)=>{serverDbs[name]=config.connection})});let apps=MowaHelper.getRunningAppModules(api);apps.forEach(appModule=>{features=MowaHelper.getAllDbmsFeatures(appModule);let appDbs={};features.forEach(feature=>{let featureConfig=appModule.config[feature.name];_.forOwn(featureConfig,(config,name)=>{appDbs[name]=config.connection})});allAppDbs[appModule.name]=appDbs});return[serverDbs,allAppDbs]};exports.getAppDbConnections=function(api){let appName=api.getOption('app'),appModule=api.server.childModules[appName];if(!appModule){throw new Error(`App "${appName}" is not mounted in the project.`)}let conns=[],features=MowaHelper.getAllDbmsFeatures(api.server);features.forEach(feature=>{let featureConfig=api.server.config[feature.name];_.forOwn(featureConfig,(config,name)=>{conns.push(feature.name+':'+name)})});features=MowaHelper.getAllDbmsFeatures(appModule);let appDbs={};features.forEach(feature=>{let featureConfig=appModule.config[feature.name];_.forOwn(featureConfig,(config,name)=>{conns.push(feature.name+':'+name)})});return _.uniq(conns)};exports.getAppSchemas=function(api){let appModule=exports.getAppModuleToOperate(api),schemas=[],files=Util.glob.sync('*.ool',{cwd:appModule.oolongPath});files.forEach(f=>{let linker=new oolong.Linker({logger:api.logger,currentApp:appModule});linker.link(path.join(appModule.oolongPath,f));schemas.push(linker.schema)});return schemas.map(s=>s.name)};