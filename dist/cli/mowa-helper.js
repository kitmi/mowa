'use strict';const path=require('path');const Util=require('rk-utils');const _=Util._;const fs=Util.fs;const{Config,JsonConfigProvider}=require('rk-config');const Mowa=require('../server.js');const MowaHelper=module.exports;exports.startMowa_=function(api){let mowa=new Mowa(api.mowaName,{deaf:true,verbose:api.config['general'].mowaVerbose});return mowa.start()};exports.writeConfigBlock_=function(loader,key,value){Util.setValueByPath(loader.provider.esConfig,key,value);return loader.provider.save()};exports.getAvailableAppNames=function(api){let appModulesPath=path.resolve(api.base,Mowa.Util.Literal.APP_MODULES_PATH);let modules=fs.readdirSync(appModulesPath,'utf8');return _.filter(modules,f=>fs.lstatSync(path.join(appModulesPath,f)).isDirectory())};exports.getMountedAppNames_=function(api){let mounted={};return MowaHelper.loadServerConfig_(api).then(loader=>{_.forOwn(loader.data.routing,(config,route)=>{if(config.mod){mounted[route]=config.mod.name}});return mounted})};exports.getRunningAppModules=function(api,server){return _.values(server.childModules)};exports.getAllDbmsFeatures=function(appModule){return _.filter(appModule.features,{type:Mowa.Util.Feature.DBMS})};exports.getDbConnectionList_=function(api){let serverDbs={};let allAppDbs={};return MowaHelper.startMowa_(api).then(server=>{let features=MowaHelper.getAllDbmsFeatures(server);features.forEach(feature=>{let featureConfig=server.config[feature];_.forOwn(featureConfig,(config,name)=>{serverDbs[name]=config.connection})});let apps=MowaHelper.getRunningAppModules(api,server);apps.forEach(appModule=>{features=MowaHelper.getAllDbmsFeatures(appModule);let appDbs={};features.forEach(feature=>{let featureConfig=appModule.config[feature];_.forOwn(featureConfig,(config,name)=>{appDbs[name]=config.connection})});allAppDbs[appModule.name]=appDbs});return[serverDbs,allAppDbs,server]})};