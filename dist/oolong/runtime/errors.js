'use strict';const Mowa=require('../../server.js'),Util=require('../../util.js'),Error=require('../../error.js'),_=Util._;let ModelValidationError=class ModelValidationError extends Error.InvalidRequest{constructor(errors){super('Validation failed.');this.name='ModelValidationError';this.errors=_.castArray(errors);let message='';this.errors.forEach(item=>{if(message){message+='\n'}message+=`${item.message||'Invalid input.'}`;if(item.field){message+=` Related field: "${item.field.name}"\n`}else if(item.fields){message+=` Related fields: "${JSON.stringify(item.fields.map(f=>f.name))}"\n`}});if(message){this.message=message}}};let ModelResultError=class ModelResultError extends Error.ServerError{constructor(message){super(message);this.name='ModelResultError'}};let ModelOperationError=class ModelOperationError extends Error.ServerError{constructor(message,related,detail){if(related){message+=', related: '+related}if(detail){message+=', detail: '+detail}super(message);this.name='ModelOperationError'}};exports.ModelResultError=ModelResultError;exports.ModelValidationError=ModelValidationError;exports.ModelOperationError=ModelOperationError;