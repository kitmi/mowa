'use strict';const Util=require('../../util.js'),_=Util._,Entity=require('./entity.js'),Oolong=require('./oolong.js'),OolUtils=require('./ool-utils.js');let OolongSchema=class OolongSchema{constructor(linker,oolModule){this.linker=linker;this.name=oolModule.name;this.oolModule=oolModule;this.info=oolModule.schema;this.entities={};this.entityIdMap={};this.relations=undefined;this.initialized=false}clone(stack){if(!stack)stack=new Map;let cl=new OolongSchema(this.linker,this.oolModule);stack.set(this,cl);cl.entities=OolUtils.deepClone(this.entities,stack);cl.entityIdMap=OolUtils.deepClone(this.entityIdMap,stack);if(this.relations){cl.relations=OolUtils.deepClone(this.relations,stack)}cl.initialized=this.initialized;return cl}link(){if(this.initialized){return this}this.linker.log('debug','Initializing schema ['+this.name+'] ...');this.info.entities.forEach(entityEntry=>{let entity=this.linker.loadEntity(this.oolModule,entityEntry.entity),entityInstanceName=entityEntry.alias||entity.name;this.addEntity(entityInstanceName,entity)});this.initialized=true;return this}addRelation(relation){if(!this.relations){this.relations=[]}if(!this.hasEntityById(relation.left.id)){this.addEntity(relation.left.name,relation.left)}if(!this.hasEntityById(relation.right.id)){this.addEntity(relation.right.name,relation.right)}let leftName=this.entityIdMap[relation.left.id],rightName=this.entityIdMap[relation.right.id],r=Object.assign({},relation,{left:leftName,right:rightName});this.relations.push(r);return this}hasEntityById(entityId){return entityId in this.entityIdMap}hasEntity(entityName){return entityName in this.entityIdMap}addEntity(name,entity){if(this.hasEntity(name)){throw new Error(`Entity name [${name}] conflicts in schema [${this.name}].`)}if(this.hasEntityById(entity.id)){throw new Error(`Entity [${entity.id}] already exists in schema [${this.name}].`)}this.entities[name]=entity;this.entityIdMap[entity.id]=name;return this}toJSON(){return{name:this.name,entities:_.reduce(this.entities,(r,v,k)=>(r[k]=v.toJSON(),r),{}),relations:this.relations,deployments:this.deployments}}};module.exports=OolongSchema;