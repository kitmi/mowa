'use strict';const inflection=require('inflection');const Util=require('../../../util.js');const _=Util._;const FEATURE_NAME='stateTracking';function initialize(entity,options){if(!options){throw new Error('Missing field options!')}if(typeof options==='string'){options={field:options}}if(!options.field){throw new Error('Missing field name in options!')}let stateSetTimestamp={type:'datetime',range:'timestamp',auto:true,optional:true};if(!options.reversible){stateSetTimestamp.writeOnceOnly=true}entity.addFeature({name:FEATURE_NAME,field:options.field}).on('afterFields',()=>{if(!entity.hasField(options.field)){throw new Error('Field "'+options.field+'" does not exist!')}let fieldInfo=entity.fields[options.field];if(fieldInfo.type!=='enum'){throw new Error('Only enum field can be used with stateTracking feature!')}fieldInfo.values.forEach(state=>{let fieldName=options.field+inflection.camelize(state)+'Timestamp';entity.addField(fieldName,stateSetTimestamp)})})}module.exports=initialize;