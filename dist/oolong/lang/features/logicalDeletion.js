'use strict';const Util=require('../../../util.js'),_=Util._,FEATURE_NAME='logicalDeletion';function initialize(entity,options){let newField=true,fieldInfo={name:'isDeleted',type:'bool','default':false,readOnly:true},fieldName,featureSetting;if(options){if(_.isPlainObject(options)){newField=false;let keys=Object.keys(options);if(1!==keys.length){throw new Error(`Invalid options for feature "${FEATURE_NAME}".`)}let fieldName=keys[0];featureSetting={field:fieldName,value:options[fieldName]}}else if('string'===typeof options){Object.assign(fieldInfo,{name:options})}else{throw new Error(`Invalid options for feature "${FEATURE_NAME}".`)}}if(newField){fieldName=fieldInfo.name;delete fieldInfo.name;entity.addFeature(FEATURE_NAME,{field:fieldName,value:true});entity.on('afterFields',()=>{entity.addField(fieldName,fieldInfo)})}else{entity.addFeature(FEATURE_NAME,featureSetting);entity.on('afterFields',()=>{if(!entity.hasField(featureSetting.field)){throw new Error(`Field "${featureSetting.field}" used by feature "${FEATURE_NAME}" is not found in entity "${entity.name}".`)}})}}module.exports=initialize;