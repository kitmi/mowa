'use strict';const Util=require('../../util.js'),_=Util._,Entity=require('./entity.js'),Schema=require('./schema.js'),Field=require('./field.js'),deepClone=(value,stack)=>{if('object'!==typeof value){return value}if(stack&&stack.has(value)){return stack.get(value)}let result;if(_.isArray(value)){result=[];stack&&stack.set(value,result);value.forEach(v=>{result.push(deepClone(v,stack))})}else if(_.isPlainObject(value)){result={};stack&&stack.set(value,result);_.each(value,(v,k)=>{result[k]=deepClone(v,stack)})}else{if(value instanceof Entity.constructor||value instanceof Schema.constructor||value instanceof Field.constructor){result=value.clone(stack);stack&&stack.set(value,result)}else{result=_.clone(value);stack&&stack.set(value,result)}}return result},deepCloneField=(src,dest,field,stack)=>{if(src[field])dest[field]=deepClone(src[field],stack)},isMemberAccess=name=>0<name.indexOf('.'),extractMemberAccess=name=>name.split('.'),getReferenceNameIfItIs=obj=>{if(_.isPlainObject(obj)&&'ObjectReference'===obj.oolType){return extractMemberAccess(obj.name)[0]}return undefined};exports.deepClone=deepClone;exports.deepCloneField=deepCloneField;exports.isMemberAccess=isMemberAccess;exports.extractMemberAccess=extractMemberAccess;exports.getReferenceNameIfItIs=getReferenceNameIfItIs;exports.FUNCTOR_VARIABLE='variable';exports.FUNCTOR_VALIDATOR='validator';exports.FUNCTOR_MODIFIER='modifier';exports.FUNCTOR_FUNCTION='function';