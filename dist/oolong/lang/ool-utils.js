'use strict';const Util=require('../../util.js'),_=Util._,Entity=require('./entity.js'),Schema=require('./schema.js'),Field=require('./field.js'),deepClone=(value,stack)=>{if('object'!==typeof value){return value}if(stack&&stack.has(value)){return stack.get(value)}let result;if(_.isArray(value)){result=[];stack&&stack.set(value,result);value.forEach(v=>{result.push(deepClone(v,stack))})}else if(_.isPlainObject(value)){result={};stack&&stack.set(value,result);_.each(value,(v,k)=>{result[k]=deepClone(v,stack)})}else{if(value instanceof Entity.constructor||value instanceof Schema.constructor||value instanceof Field.constructor){result=value.clone(stack);stack&&stack.set(value,result)}else{result=_.clone(value);stack&&stack.set(value,result)}}return result},deepCloneField=(src,dest,field,stack)=>{if(src[field])dest[field]=deepClone(src[field],stack)},isMemberAccess=name=>0<name.indexOf('.'),extractMemberAccess=name=>name.split('.'),getReferenceNameIfItIs=obj=>{if(_.isPlainObject(obj)&&'ObjectReference'===obj.oolType){return extractMemberAccess(obj.name)[0]}return undefined};exports.parseReferenceInDocument=(schema,doc,ref)=>{let parts=ref.split('.'),parent,l=parts.length,entityNode,entity,field;for(let i=0,p;i<l;i++){p=parts[i];if(!entityNode){if(doc.entity===p){entityNode=doc;continue}throw new Error(`Reference by path "${ref}" not found in given document.`)}if(entityNode&&'$'===p[0]){entity=schema.entities[entityNode.entity];let attr=entity.getEntityAttribute(p);if(attr instanceof Field){field=attr;if(i!==l-1){throw new Error(`Reference by path "${ref}" not found in given document.`)}return{entityNode,entity,field}}else{parent=attr}continue}if(parent){parent=parent[p]}else{if(i===l-1){entity=schema.entities[entityNode.entity];field=entity.getEntityAttribute(p);return{entityNode,entity,field}}entityNode=entityNode.subDocuments&&entityNode.subDocuments[p];if(!entityNode){throw new Error(`Reference by path "${ref}" not found in given document.`)}}}if(!field){if('string'!==typeof parent){throw new Error(`Reference by path "${ref}" not found in given document.`)}if(!entity){throw new Error(`Reference by path "${ref}" not found in given document.`)}field=entity.getEntityAttribute(parent);if(!(field instanceof Field)){throw new Error(`Reference by path "${ref}" not found in given document.`)}}return{entityNode,entity,field}};exports.deepClone=deepClone;exports.deepCloneField=deepCloneField;exports.isMemberAccess=isMemberAccess;exports.extractMemberAccess=extractMemberAccess;exports.getReferenceNameIfItIs=getReferenceNameIfItIs;exports.entityNaming=name=>_.camelCase(name);exports.fieldNaming=name=>_.camelCase(name);exports.FUNCTOR_VALIDATOR='validator';exports.FUNCTOR_MODIFIER='modifier';exports.FUNCTORS_LIST=['validators0','modifiers0','validators1','modifiers1'];