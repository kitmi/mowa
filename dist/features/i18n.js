'use strict';const Mowa=require('../server.js'),Util=Mowa.Util,Promise=Util.Promise,_=Util._,I18n=require('../i18n.js'),DEFAULT_LOCALE='en_AU',DEFAULT_PRECEDENCE=['query','cookie','header'];let I18nStorage=class I18nStorage{static get file(){return I18n.File}};let I18nService=class I18nService{constructor(Handler,options){this.HandlerClass=Handler;this.options=options;this.cache=Util.createLRUCache(5)}async getI18n(locale){const self=this;let i18nHandler=locale&&this.cache.get(locale);if(!i18nHandler){i18nHandler=new this.HandlerClass(this.options);if(!locale||!i18nHandler.isLocaleSupported(locale)){locale=i18nHandler.defaultLocale;let defaultHandler=this.cache.get(locale);if(defaultHandler){return Promise.resolve(defaultHandler)}}await i18nHandler.setupAsync(locale);self.cache.set(locale,i18nHandler)}return i18nHandler}};module.exports={type:Mowa.Feature.SERVICE,load_:async(appModule,config)=>{if(!config.store){throw new Mowa.Error.InvalidConfiguration('Missing store type.',appModule,'i18n.store')}let Storage=I18nStorage[config.store];if(!Storage){throw new Mowa.Error.InvalidConfiguration('Unsupported store type.',appModule,'i18n.store')}let options;if('file'===config.store){options=Object.assign({},{directory:Mowa.Literal.LOCALE_PATH},config.options)}let service=new I18nService(Storage,options),precedence=_.isEmpty(config.precedence)?['query','cookie','header']:config.precedence,queryKey=config.queryKey||'locale',cookieKey=config.cookieKey||'locale',defaultLocale=config.defaultLocale||DEFAULT_LOCALE;precedence.forEach(p=>{if(-1===DEFAULT_PRECEDENCE.indexOf(p)){throw new Mowa.Error.InvalidConfiguration('Unknown locale id source: '+source,appModule,'i18n.precedence')}});let i18nMiddleware=async(ctx,next)=>{let locale,found=precedence.some(source=>{switch(source){case'query':locale=ctx.query[queryKey];break;case'cookie':locale=ctx.cookies.get(cookieKey);break;case'header':let accept=ctx.acceptsLanguages()||'',reg=/(^|,\s*)([a-z-]+)/gi,match,l;while(match=reg.exec(accept)){if(!l){l=match[2]}}locale=l;break;}return!_.isEmpty(locale)});if(found)ctx.requestedLocale=locale;ctx.__=await service.getI18n(ctx.requestedLocale||defaultLocale);await next()};appModule.__=await service.getI18n(defaultLocale);appModule.registerService('i18n',service);appModule.router.use(i18nMiddleware)}};