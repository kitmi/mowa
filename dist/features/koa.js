'use strict';require('debug')('tracing')(__filename);const Util=require('../util.js');module.exports={type:Util.Feature.ENGINE,load:function(appModule,config){let app=appModule.router;app.env=appModule.env;app.name=config.name||appModule.name;app.proxy=Util.S(config.trustProxy).toBoolean();if(config.cookieSecretKeys)app.keys=config.cookieSecretKeys;app.on('error',(err,ctx)=>{if(err.status&&err.status<500){appModule.log('warn',`[${err.status}] `+err.message,ctx&&Util._.pick(ctx,['method','url','ip']))}else{appModule.log('error',err.message,err.stack)}});let port=config.httpPort||2331;if(!appModule.serverModule.options.deaf){appModule.httpServer=require('http').createServer(app.callback());appModule.serverModule.addHttpServer(appModule,appModule.httpServer);appModule.on('after:'+Util.Feature.ROUTING,()=>{appModule.httpServer.listen(port,function(err){if(err)throw err;if(config.publicUrl){appModule.publicUrl=config.publicUrl}else{appModule.publicUrl='http://localhost:'+port}appModule.log('info',`A http service is listening on port [${this.address().port}] ...`);appModule.emit('httpReady')})})}else{if(config.publicUrl){appModule.publicUrl=config.publicUrl}else{appModule.publicUrl='http://localhost:'+port}}return Promise.resolve()}};