{
    "type": {
        "userStatus": {
            "type": "enum",
            "values": [
                "inactive",
                "active",
                "disabled",
                "forbidden",
                "deleted"
            ]
        }
    },
    "entity": {
        "user": {
            "comment": "User Credential",
            "features": [
                {
                    "name": "autoId",
                    "options": {
                        "startFrom": 100000
                    }
                },
                {
                    "name": "createTimestamp"
                },
                {
                    "name": "updateTimestamp"
                },
                {
                    "name": "logicalDeletion",
                    "options": {
                        "status": "deleted"
                    }
                },
                {
                    "name": "stateTracking",
                    "options": {
                        "field": "status",
                        "reversible": true
                    }
                },
                {
                    "name": "atLeastOneNotNull",
                    "options": [
                        "email",
                        "mobile"
                    ]
                }
            ],
            "fields": {
                "email": {
                    "type": "email"
                },
                "mobile": {
                    "type": "phone",
                    "validators0": [
                        {
                            "name": "isMobilePhone",
                            "args": {
                                "oolType": "ComputedValue",
                                "value": {
                                    "oolType": "ObjectReference",
                                    "name": "latest.locale"
                                },
                                "modifiers0": [
                                    {
                                        "name": "stringDasherize"
                                    }
                                ]
                            }
                        }
                    ],
                    "modifiers0": [
                        {
                            "name": "normalizeMobile"
                        }
                    ]
                },
                "password": {
                    "type": "password",
                    "modifiers0": [
                        {
                            "name": "hashPassword",
                            "args": {
                                "oolType": "ObjectReference",
                                "name": "latest.passwordSalt"
                            }
                        }
                    ]
                },
                "passwordSalt": {
                    "type": "text",
                    "fixedLength": 32,
                    "auto": true,
                    "readOnly": true,
                    "fixedValue": true
                },
                "displayName": {
                    "type": "name",
                    "optional": true
                },
                "locale": {
                    "type": "shortName",
                    "default": "en_AU"
                },
                "isEmailVerified": {
                    "type": "flag",
                    "default": false
                },
                "isMobileVerified": {
                    "type": "flag",
                    "default": false
                },
                "status": {
                    "type": "userStatus",
                    "default": "inactive"
                },
                "tag": {
                    "type": "tag",
                    "optional": true
                }
            },
            "indexes": [
                {
                    "fields": "email",
                    "unique": true
                },
                {
                    "fields": "mobile",
                    "unique": true
                }
            ],
            "data": [
                {
                    "email": "admin@levo.legal",
                    "mobile": "0412345678",
                    "password": "123456",
                    "displayName": "Admin",
                    "isEmailVerified": true,
                    "isMobileVerified": true,
                    "status": "active"
                }
            ],
            "interface": {
                "validateUserCredential": {
                    "accept": [
                        {
                            "name": "identity",
                            "type": "text",
                            "maxLength": 200
                        },
                        {
                            "name": "password",
                            "type": "password"
                        }
                    ],
                    "implementation": [
                        {
                            "oolType": "findOne",
                            "model": "user",
                            "case": {
                                "items": [
                                    {
                                        "oolType": "ConditionalStatement",
                                        "test": {
                                            "oolType": "ComputedValue",
                                            "value": {
                                                "oolType": "ObjectReference",
                                                "name": "identity"
                                            },
                                            "validators0": [
                                                {
                                                    "name": "isEmail"
                                                }
                                            ]
                                        },
                                        "then": {
                                            "email": {
                                                "oolType": "ObjectReference",
                                                "name": "identity"
                                            }
                                        }
                                    },
                                    {
                                        "oolType": "ConditionalStatement",
                                        "test": {
                                            "oolType": "ComputedValue",
                                            "value": {
                                                "oolType": "ObjectReference",
                                                "name": "identity"
                                            },
                                            "validators0": [
                                                {
                                                    "name": "matches",
                                                    "args": "/^(\\+?\\d{6,})$/"
                                                }
                                            ]
                                        },
                                        "then": {
                                            "mobile": {
                                                "oolType": "ComputedValue",
                                                "value": {
                                                    "oolType": "ObjectReference",
                                                    "name": "identity"
                                                },
                                                "modifiers0": [
                                                    {
                                                        "name": "normalizeMobile"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ],
                                "else": {
                                    "oolType": "ReturnExpression",
                                    "value": {
                                        "error": {
                                            "message": "invalid_identity"
                                        }
                                    }
                                }
                            }
                        }
                    ],
                    "return": {
                        "oolType": "ReturnExpression",
                        "value": {
                            "oolType": "ObjectReference",
                            "name": "user"
                        },
                        "exceptions": [
                            {
                                "oolType": "ConditionalStatement",
                                "test": {
                                    "oolType": "UnaryExpression",
                                    "operator": "not-exists",
                                    "argument": {
                                        "oolType": "ObjectReference",
                                        "name": "user"
                                    }
                                },
                                "then": {
                                    "error": {
                                        "message": "user_not_found"
                                    }
                                }
                            },
                            {
                                "oolType": "ConditionalStatement",
                                "test": {
                                    "oolType": "BinaryExpression",
                                    "operator": "!=",
                                    "left": {
                                        "oolType": "ComputedValue",
                                        "value": {
                                            "oolType": "ObjectReference",
                                            "name": "password"
                                        },
                                        "modifiers0": [
                                            {
                                                "name": "hashPassword",
                                                "args": {
                                                    "oolType": "ObjectReference",
                                                    "name": "user.passwordSalt"
                                                }
                                            }
                                        ]
                                    },
                                    "right": {
                                        "oolType": "ObjectReference",
                                        "name": "user.password"
                                    }
                                },
                                "then": {
                                    "error": {
                                        "message": "invalid_password"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
    },
    "id": "./entities/user.ool",
    "namespace": [
        "/Users/rockieguo/Documents/GitHub/mowa/lib/oolong/lang/core/entities/oolong",
        "/Users/rockieguo/Documents/Code/levo/app_modules/levo-sso/oolong/entities/*"
    ],
    "name": "user",
    "path": "/Users/rockieguo/Documents/Code/levo/app_modules/levo-sso/oolong/entities"
}